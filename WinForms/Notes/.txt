Разработка оконных приложений

Form.cs - пользовательская часть для програмирования формы
Form1.Designer.cs - на первых порах не стоит менять InitializeComponent();
 система автоматически его дополняет

 Элементы управления и события


 Обработчик события имеет вид
 private void button_Click(object sender,EventArgs e)
 sender - обект пославший событие
 EventArgs e - тип и параметр, детализирующий событие. Тип меняется в разных событиях


 События делятся на
- события UI (User Interface):
 = нажатия кнопок интерфейса,
 = движение мыши и кнопки мыши,
 = нажатия кнопок клавиатуры
-события жизненного цикла:
 = готовность формы (Load)
 = перерисовка (Paint)
 = разрушение (Closing, Closed)
Load / Constructor
Как событие готовности, так и конструктор объекта формы, используются для начальной инициализации. 
В конструкторе принято инициализировать то, что не касается UI: коллекции - или массивы, утилиты.
В событии готовности - UI элементы.

Дочерние элементы управления собираются в коллекцию Controls



Dependency injection

подход согласно которому обьекты строятся при помощи контейнера
в который решает все нужные для создания зависимости


Таймер

Таймер вызывает методы из потока UI (invoke не требуется)
Не рекомендуется для точного контроля времени
Имеет погрешность особенно при малых интервалах <50


1. Запуск процессов и управление ими
2. Получение информации о процессах

Паттерны (шаблоны) проектирования:
MVC MVP MVVM

Паттерны - образцы, шаблоны, хорошие примеры организации проекта
Паттерны - имеют названия и являются популярными подхода





